{"version":3,"file":"798.322ad047019e8ef7584e.js","mappings":"qKAuHO,MAAMA,EAAQ,SAACC,EAAD,GAAmB,IAAd,MAAEC,GAAY,EAClCC,MAILC,SAASC,QAAQ,oBAxHlB,SAAgCC,GAC/B,IAAKH,IAAG,OAER,IAAII,EAAOD,EAAQE,QAAQ,QACvBC,EAASF,EAAKG,KAAK,iBACnBC,EAAUR,IAAEI,GAAM,GAAGK,OACrBC,EAAaN,EAAKO,KAAK,eAED,IAAfD,GAA4C,IAAdA,IACxCA,EAAa,QAGd,IAAIE,EAAW,IAAIC,SAAST,EAAK,IACjCQ,EAASE,OAAOR,EAAOK,KAAK,QAASL,EAAOS,OAE5C,MAAMC,EAAW,IAAIJ,EAASK,WAAWC,QACxC,SAACC,EAAOC,GAAR,OACCD,GACCC,EAAQ,GAAGC,QAAQ,aAAe,EAChCC,SAASF,EAAQ,GAAI,IACrB,KACJ,GAOGhB,EAAKC,QAAQ,qBAAqBkB,SACrCnB,EAAKC,QAAQ,qBACXE,KAAK,iBACLiB,YAAY,SAEdpB,EAAKC,QAAQ,qBACXE,KAAK,iBACLkB,SAAS,YAGZnB,EAAOkB,YAAY,SACnBlB,EAAOmB,SAAS,WAGhBzB,IAAE0B,SAASC,MAAMzB,QAAQ,iBAAkB,CAACI,EAAQ,KAEtCsB,MAAMpB,EAAS,CAC5BqB,OAAQnB,EACRiB,KAAMf,IAOLkB,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,EAAMC,EAAYC,GACxB,MAAMC,EAAMV,SAASW,cAAc,OACnCD,EAAIE,UAAYL,EAEhB,IAAIM,EAAQH,EAAII,cAAc,sBAE9B,GAAID,GAASA,EAAMD,UAAUf,OAAS,EAAG,CACxC,IAAIkB,EAAUf,SAASc,cACtB,gCAWD,OARIC,EAAQD,cAAc,uBACzBC,EAAQD,cAAc,sBAAsBE,cAGzCD,GACHA,EAAQE,YAAYJ,IAMtBvC,IAAE0B,SAASC,MAAMzB,QAAQ,uBAEzBF,IAAAA,KAAO,CACN4C,IAAKC,yBAAyBC,YAC5BC,WACAC,QAAQ,eAAgB,2BAC1BC,KAAM,OACNC,QAAS,SAACjB,GACLA,GAAQA,EAAKkB,YAChBnD,IAAAA,KAAOiC,EAAKkB,WAAW,SAAUC,EAAKC,GACrCrD,IAAEoD,GAAKE,YAAYD,MAGpBrD,IAAE0B,SAASC,MAAMzB,QAAQ,2BAGtBE,EAAKC,QAAQ,qBAAqBkB,SACrCnB,EAAKC,QAAQ,qBACXE,KAAK,iBACLkB,SAAS,SAEXrB,EAAKC,QAAQ,qBACXE,KAAK,iBACLiB,YAAY,YAGfxB,IAAE0B,SAASC,MAAMzB,QAAQ,gBAAiB,CACzC+B,EAAKkB,UACLlB,EAAKsB,UACLjD,EACAU,UAKHwC,OAAM,kBAAMlD,EAAOkB,YAAY,cAC/BiC,SAAQ,kBAAMnD,EAAOkB,YAAY,cASnCkC,CAAuB1D,IAAEF","sources":["webpack://ctFrontend/./static/js/frontend/woocommerce/add-to-cart-single.js"],"sourcesContent":["import $ from 'jquery'\n\nvar currentTask\n\nfunction singleProductAddToCart(wrapper) {\n\tif (!$) return\n\n\tvar form = wrapper.closest('form')\n\tvar button = form.find('button.button')\n\tvar formUrl = $(form)[0].action\n\tvar formMethod = form.attr('method')\n\n\tif (typeof formMethod === 'undefined' || formMethod == '') {\n\t\tformMethod = 'POST'\n\t}\n\n\tvar formData = new FormData(form[0])\n\tformData.append(button.attr('name'), button.val())\n\n\tconst quantity = [...formData.entries()].reduce(\n\t\t(total, current) =>\n\t\t\ttotal +\n\t\t\t(current[0].indexOf('quantity') > -1\n\t\t\t\t? parseInt(current[1], 10)\n\t\t\t\t: 0),\n\t\t0\n\t)\n\n\tif (quantity === 0) {\n\t\t// return\n\t}\n\n\tif (form.closest('.quick-view-modal').length) {\n\t\tform.closest('.quick-view-modal')\n\t\t\t.find('.ct-quick-add')\n\t\t\t.removeClass('added')\n\n\t\tform.closest('.quick-view-modal')\n\t\t\t.find('.ct-quick-add')\n\t\t\t.addClass('loading')\n\t}\n\n\tbutton.removeClass('added')\n\tbutton.addClass('loading')\n\n\t// Trigger event.\n\t$(document.body).trigger('adding_to_cart', [button, {}])\n\n\tcurrentTask = fetch(formUrl, {\n\t\tmethod: formMethod,\n\t\tbody: formData,\n\t\t/*\n\t\tcache: false,\n\t\tcontentType: false,\n\t\tprocessData: false,\n        */\n\t})\n\t\t.then((r) => r.text())\n\t\t.then((data, textStatus, jqXHR) => {\n\t\t\tconst div = document.createElement('div')\n\t\t\tdiv.innerHTML = data\n\n\t\t\tlet error = div.querySelector('.woocommerce-error')\n\n\t\t\tif (error && error.innerHTML.length > 0) {\n\t\t\t\tlet notices = document.querySelector(\n\t\t\t\t\t'.woocommerce-notices-wrapper'\n\t\t\t\t)\n\n\t\t\t\tif (notices.querySelector('.woocommerce-error')) {\n\t\t\t\t\tnotices.querySelector('.woocommerce-error').remove()\n\t\t\t\t}\n\n\t\t\t\tif (notices) {\n\t\t\t\t\tnotices.appendChild(error)\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t$(document.body).trigger('wc_fragment_refresh')\n\n\t\t\t$.ajax({\n\t\t\t\turl: wc_cart_fragments_params.wc_ajax_url\n\t\t\t\t\t.toString()\n\t\t\t\t\t.replace('%%endpoint%%', 'get_refreshed_fragments'),\n\t\t\t\ttype: 'POST',\n\t\t\t\tsuccess: (data) => {\n\t\t\t\t\tif (data && data.fragments) {\n\t\t\t\t\t\t$.each(data.fragments, function (key, value) {\n\t\t\t\t\t\t\t$(key).replaceWith(value)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t$(document.body).trigger('wc_fragments_refreshed')\n\t\t\t\t\t}\n\n\t\t\t\t\tif (form.closest('.quick-view-modal').length) {\n\t\t\t\t\t\tform.closest('.quick-view-modal')\n\t\t\t\t\t\t\t.find('.ct-quick-add')\n\t\t\t\t\t\t\t.addClass('added')\n\n\t\t\t\t\t\tform.closest('.quick-view-modal')\n\t\t\t\t\t\t\t.find('.ct-quick-add')\n\t\t\t\t\t\t\t.removeClass('loading')\n\t\t\t\t\t}\n\n\t\t\t\t\t$(document.body).trigger('added_to_cart', [\n\t\t\t\t\t\tdata.fragments,\n\t\t\t\t\t\tdata.cart_hash,\n\t\t\t\t\t\tbutton,\n\t\t\t\t\t\tquantity,\n\t\t\t\t\t])\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t\t.catch(() => button.removeClass('loading'))\n\t\t.finally(() => button.removeClass('loading'))\n}\n\nexport const mount = (el, { event }) => {\n\tif (!$) {\n\t\treturn\n\t}\n\n\tctEvents.trigger('ct:header:update')\n\tsingleProductAddToCart($(el))\n}\n"],"names":["mount","el","event","$","ctEvents","trigger","wrapper","form","closest","button","find","formUrl","action","formMethod","attr","formData","FormData","append","val","quantity","entries","reduce","total","current","indexOf","parseInt","length","removeClass","addClass","document","body","fetch","method","then","r","text","data","textStatus","jqXHR","div","createElement","innerHTML","error","querySelector","notices","remove","appendChild","url","wc_cart_fragments_params","wc_ajax_url","toString","replace","type","success","fragments","key","value","replaceWith","cart_hash","catch","finally","singleProductAddToCart"],"sourceRoot":""}